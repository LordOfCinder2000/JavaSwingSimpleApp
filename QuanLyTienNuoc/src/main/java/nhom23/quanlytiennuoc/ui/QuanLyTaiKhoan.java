/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nhom23.quanlytiennuoc.ui;

import java.util.List;
import java.util.UUID;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import nhom23.quanlytiennuoc.dao.KhachHangDao;
import nhom23.quanlytiennuoc.dao.NguoiDungDao;
import nhom23.quanlytiennuoc.dao.QuyenTaiKhoanDao;
import nhom23.quanlytiennuoc.helpers.DataValidator;
import nhom23.quanlytiennuoc.helpers.MessageDialogHelper;
import nhom23.quanlytiennuoc.model.NguoiDung;
import nhom23.quanlytiennuoc.model.QuyenTaiKhoan;


/**
 *
 * @author Admin
 */
public class QuanLyTaiKhoan extends javax.swing.JPanel {
    private MainForm parentForm;
    private DefaultTableModel tblModel;
    private DefaultComboBoxModel<QuyenTaiKhoan> cbbBoxModelQTK;
    /**
     * Creates new form QuanLyTaiKhoan
     */
    public QuanLyTaiKhoan() {
        initComponents();
        initTable();
        loadDataToTable();
        loadDataToCBB();
        txtMaTK.setText(UUID.randomUUID().toString());
    }
    
    public void loadDataToCBB()
    {
        QuyenTaiKhoanDao dao = new QuyenTaiKhoanDao();
        List<QuyenTaiKhoan> list = dao.getTable();
        cbbBoxModelQTK = new DefaultComboBoxModel<QuyenTaiKhoan>();
        cbbQuyenTaiKhoan.setModel(cbbBoxModelQTK);
        for (QuyenTaiKhoan quyenTaiKhoan : list) {
            cbbBoxModelQTK.addElement(quyenTaiKhoan);
        }
    }
    
    private void initTable(){
        tblModel = new DefaultTableModel();
        tblModel.setColumnIdentifiers(new String[]{"Mã tài khoản","Tên hiển thị","Tên quyền","Tên tài khoản"});
        tblTaiKhoan.setModel(tblModel);
    }
    
    public void loadDataToTable()
    {
        try {
            NguoiDungDao dao = new NguoiDungDao();
            NguoiDungDao nguoiDungDao = new NguoiDungDao();
            List<NguoiDung> list = dao.getTable();
            tblModel.setRowCount(0);
            for (NguoiDung item : list) {
                tblModel.addRow(new Object[]{
                    item.getMaTK(), item.getTenHienThi(), item.getQuyenTaiKhoan(),item.getTenTaiKhoan() 
                });
            }
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(parentForm, e.getMessage(), "Lỗi");
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        txtTenHienThi = new javax.swing.JTextField();
        txtTenTaiKhoan = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTaiKhoan = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        cbbQuyenTaiKhoan = new javax.swing.JComboBox();
        btnNew = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtMaTK = new javax.swing.JTextField();
        txtMatKhau = new javax.swing.JPasswordField();
        txtXacNhanMatKhau = new javax.swing.JPasswordField();

        setToolTipText("Quản lý tài khoản");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 51));
        jLabel1.setText("Quản lý tài khoản");

        jLabel2.setText("Quyền:");

        jLabel3.setText("Tên tài khoản:");

        jLabel4.setText("Mật khẩu:");

        jLabel5.setText("Xác nhận mật khẩu:");

        jLabel6.setText("Tên hiển thị:");

        tblTaiKhoan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTaiKhoan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTaiKhoanMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTaiKhoan);

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nhom23/quanlytiennuoc/icons/Save-icon.png"))); // NOI18N
        btnSave.setText("Thêm");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nhom23/quanlytiennuoc/icons/Actions-document-edit-icon-16.png"))); // NOI18N
        btnUpdate.setText("Sửa");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nhom23/quanlytiennuoc/icons/Actions-edit-delete-icon-16.png"))); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSave)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete, btnSave, btnUpdate});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnSave)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDelete, btnSave, btnUpdate});

        cbbQuyenTaiKhoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbQuyenTaiKhoanActionPerformed(evt);
            }
        });

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nhom23/quanlytiennuoc/icons/new-icon-16.png"))); // NOI18N
        btnNew.setText("Làm mới");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        jLabel7.setText("Mã tài khoản:");

        txtMaTK.setEditable(false);

        txtMatKhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMatKhauActionPerformed(evt);
            }
        });

        txtXacNhanMatKhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtXacNhanMatKhauActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel1)
                        .addGap(0, 530, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtTenHienThi)
                                            .addComponent(cbbQuyenTaiKhoan, 0, 215, Short.MAX_VALUE)
                                            .addComponent(txtMaTK)
                                            .addComponent(txtMatKhau)
                                            .addComponent(txtTenTaiKhoan))
                                        .addGap(27, 27, 27)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtXacNhanMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jSeparator2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 726, Short.MAX_VALUE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cbbQuyenTaiKhoan, txtMaTK, txtMatKhau, txtTenHienThi, txtTenTaiKhoan, txtXacNhanMatKhau});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtMaTK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtTenHienThi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbbQuyenTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTenTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtXacNhanMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cbbQuyenTaiKhoan, txtMaTK, txtMatKhau, txtTenHienThi, txtTenTaiKhoan, txtXacNhanMatKhau});

    }// </editor-fold>//GEN-END:initComponents

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
       txtMaTK.setText(UUID.randomUUID().toString());
       txtTenHienThi.setText("");
       txtTenTaiKhoan.setText("");
       txtMatKhau.setText("");
       txtXacNhanMatKhau.setText("");
       cbbBoxModelQTK.setSelectedItem(null);

       loadDataToTable();
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        StringBuilder sb = new StringBuilder();
        DataValidator.validateEmpty(txtMaTK, sb, "Mã tài khoản không được để trống");
        DataValidator.validateEmpty(txtMatKhau, sb, "Mật khẩu không được để trống");
        DataValidator.validateEmpty(txtXacNhanMatKhau, sb, "Xác nhận mật không được để trống");
        DataValidator.validatePassword(txtMatKhau, sb, "Không được chứa khoảng trắng trong password");
        DataValidator.validatePassword(txtXacNhanMatKhau, sb, "Không được chứa khoảng trắng trong password");
        DataValidator.validateConfirmPassword(txtXacNhanMatKhau,txtMatKhau, sb, "Xác nhận mật khẩu không đúng");
        DataValidator.validateEmpty(txtTenTaiKhoan, sb, "Tên tài khoản không được để trống");
        DataValidator.validateUnique(txtTenTaiKhoan, sb, "Tên tài khoản đã tồn tại");
        DataValidator.validateEmpty(cbbQuyenTaiKhoan, sb, "Phải chọn quyển tài khoản");
        if(sb.length()>0)
        {
            MessageDialogHelper.showErrorDialog(parentForm, sb.toString(), "Lỗi");
            return;
        }
        NguoiDungDao dao = null;
        try {
            dao = new NguoiDungDao();
            NguoiDung nd = new NguoiDung();
            nd.setMaTK(txtMaTK.getText());
            nd.setTenHienThi(txtTenHienThi.getText());
            nd.setTenTaiKhoan(txtTenTaiKhoan.getText());
            String password = new String(txtXacNhanMatKhau.getPassword());
            password = dao.Encode(password);
            nd.setMatKhau(password);
            nd.setMaQuyenTaiKhoan(((QuyenTaiKhoan)cbbQuyenTaiKhoan.getSelectedItem()).getMaQTK());
            //MessageDialogHelper.showMessageDialog(parentForm, ((NguoiDung)cbbQuyenTaiKhoan.getSelectedItem()), "Thông báo");
            if(dao.Insert(nd))
            {
                MessageDialogHelper.showMessageDialog(parentForm, "Tài khoản đã được lưu", "Thông báo");
                loadDataToTable();
                for (int i = 0; i < tblTaiKhoan.getModel().getRowCount(); i++) {
                    if(tblTaiKhoan.getModel().getValueAt(i, 0).equals(txtMaTK.getText()))
                    {
                        tblTaiKhoan.setRowSelectionInterval(i, i);
                        break;
                    }
                    
                }
            }
            else
            {
                MessageDialogHelper.showConfirmDialog(parentForm, "Tài khoản chưa được lưu", "Thông báo");
            }
        } catch (Exception e) {
            e.printStackTrace();
            
            if(dao.findByTK(txtTenTaiKhoan.getText()) != null)
            {
                MessageDialogHelper.showErrorDialog(parentForm, "Đã có tên trong cơ sở dự liệu", "Lỗi");
            }
            else
                MessageDialogHelper.showErrorDialog(parentForm, e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtXacNhanMatKhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtXacNhanMatKhauActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtXacNhanMatKhauActionPerformed

    private void txtMatKhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMatKhauActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMatKhauActionPerformed

    private void cbbQuyenTaiKhoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbQuyenTaiKhoanActionPerformed
        
    }//GEN-LAST:event_cbbQuyenTaiKhoanActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        StringBuilder sb = new StringBuilder();
        DataValidator.validateEmpty(txtMaTK, sb, "Mã tài khoản không được để trống");
        DataValidator.validateEmpty(txtMatKhau, sb, "Mật khẩu không được để trống");
        DataValidator.validateEmpty(txtXacNhanMatKhau, sb, "Xác nhận mật không được để trống");
        DataValidator.validatePassword(txtMatKhau, sb, "Không được chứa khoảng trắng trong password");
        DataValidator.validatePassword(txtXacNhanMatKhau, sb, "Không được chứa khoảng trắng trong password");
        DataValidator.validateConfirmPassword(txtXacNhanMatKhau,txtMatKhau, sb, "Xác nhận mật khẩu không đúng");
        DataValidator.validateEmpty(txtTenTaiKhoan, sb, "Tên tài khoản không được để trống");
        DataValidator.validateUnique(txtTenTaiKhoan, sb, "Tên tài khoản đã tồn tại");
        DataValidator.validateEmpty(cbbQuyenTaiKhoan, sb, "Phải chọn quyển tài khoản");
        if(sb.length()>0)
        {
            MessageDialogHelper.showErrorDialog(parentForm, sb.toString(), "Lỗi");
            return;
        }
        if(MessageDialogHelper.showConfirmDialog(parentForm, "Bạn có muốn cập nhật tài khoản không?", "Hỏi") == JOptionPane.NO_OPTION)
        {
            return;
        }
        NguoiDungDao dao = null;
        try {
            dao = new NguoiDungDao();
            NguoiDung nd = new NguoiDung();
            nd.setMaTK(txtMaTK.getText());
            nd.setTenHienThi(txtTenHienThi.getText());
            nd.setTenTaiKhoan(txtTenTaiKhoan.getText());
            String password = new String(txtXacNhanMatKhau.getPassword());
            password = dao.Encode(password);
            nd.setMatKhau(password);
            nd.setMaQuyenTaiKhoan(((QuyenTaiKhoan)cbbQuyenTaiKhoan.getSelectedItem()).getMaQTK());
           // MessageDialogHelper.showMessageDialog(parentForm, ((QuyenTaiKhoan)cbbQuyenTaiKhoan.getSelectedItem()), "Thông báo");
            if(dao.Update(nd))
            {
                MessageDialogHelper.showMessageDialog(parentForm, "Tài khoản đã được cập nhật", "Thông báo");
                loadDataToTable();
                for (int i = 0; i < tblTaiKhoan.getModel().getRowCount(); i++) {
                    if(tblTaiKhoan.getModel().getValueAt(i, 0).equals(txtMaTK.getText()))
                    {
                        tblTaiKhoan.setRowSelectionInterval(i, i);
                        break;
                    }
                    
                }
            }
            else
            {
                MessageDialogHelper.showConfirmDialog(parentForm, "Tài khoản chưa được cập nhật", "Thông báo");
            }
        } catch (Exception e) {
            e.printStackTrace();
            
            if(dao.findByTK(txtTenTaiKhoan.getText()) != null)
            {
                MessageDialogHelper.showErrorDialog(parentForm, "Đã có tên trong cơ sở dự liệu", "Lỗi");
            }
            else
                MessageDialogHelper.showErrorDialog(parentForm, e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        StringBuilder sb = new StringBuilder();
        DataValidator.validateEmpty(txtMaTK, sb, "Mã tài khoản không được để trống");       
        if(sb.length()>0)
        {
            MessageDialogHelper.showErrorDialog(parentForm, sb.toString(), "Lỗi");
            return;
        }
        if(MessageDialogHelper.showConfirmDialog(parentForm, "Bạn có muốn xóa tài khoản không?", "Hỏi") == JOptionPane.NO_OPTION)
        {
            return;
        }
        try {
            NguoiDungDao dao = new NguoiDungDao();
            if(dao.Delete(txtMaTK.getText()))
            {
                MessageDialogHelper.showMessageDialog(parentForm, "Tài khoản đã được xóa", "Thông báo");
                loadDataToTable();
                btnNewActionPerformed(evt);
            }
            else
            {
                MessageDialogHelper.showConfirmDialog(parentForm, "Tài khoản chưa được xóa", "Thông báo");
            }
        } catch (Exception e) {
            e.printStackTrace();
            MessageDialogHelper.showErrorDialog(parentForm, e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tblTaiKhoanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTaiKhoanMouseClicked
       try {
            int row = tblTaiKhoan.getSelectedRow();
            
            if(row >= 0)
            {
                String id = (String) tblTaiKhoan.getValueAt(row, 0);
                
                NguoiDungDao dao = new NguoiDungDao();
                QuyenTaiKhoanDao qtkDao = new QuyenTaiKhoanDao();
                NguoiDung nd = dao.findByID(id);
                
                if(nd != null)
                {
                    txtMaTK.setText(nd.getMaTK());
                    txtTenHienThi.setText(nd.getTenHienThi());
                    txtTenTaiKhoan.setText(nd.getTenTaiKhoan());
                    
                    
                    cbbBoxModelQTK.setSelectedItem(qtkDao.findByID(nd.getMaQuyenTaiKhoan()));
                    
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_tblTaiKhoanMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox cbbQuyenTaiKhoan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable tblTaiKhoan;
    private javax.swing.JTextField txtMaTK;
    private javax.swing.JPasswordField txtMatKhau;
    private javax.swing.JTextField txtTenHienThi;
    private javax.swing.JTextField txtTenTaiKhoan;
    private javax.swing.JPasswordField txtXacNhanMatKhau;
    // End of variables declaration//GEN-END:variables
}
